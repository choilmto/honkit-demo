"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const promise_1 = __importDefault(require("../utils/promise"));
const generatePage_1 = __importDefault(require("./generatePage"));
const page_cache_1 = require("./page-cache");
const page_1 = __importDefault(require("../models/page"));
/**
 Output all pages using a generator

 @param {Generator} generator
 @param {Output} output
 @return {Promise<Output>}
 */
function generatePages(generator, output) {
    const cache = page_cache_1.getCache();
    const pages = output.getPages();
    const logger = output.getLogger();
    // Is generator ignoring assets?
    if (!generator.onPage) {
        return promise_1.default(output);
    }
    const root = output.book.getContentRoot();
    const isIncrementBuilding = output.incrementalChangeFileSet.size !== 0;
    const pageList = pages.map((page) => {
        const file = page.getFile();
        const absoluteFilePath = path_1.default.join(root, file.getPath());
        // incremental build
        if (isIncrementBuilding && !output.incrementalChangeFileSet.has(absoluteFilePath)) {
            logger.debug.ln(`slkip generate page "${file.getPath()}"`);
            return; // Skip build
        }
        // if has compiled pages, use it instead of compiling page
        const pageHash = page.hash();
        const cachedPage = cache.getKey(pageHash);
        const pagePromise = cachedPage
            ? // @ts-expect-error ts-migrate(2339) FIXME: Property 'fromJSON' does not exist on type 'Class'... Remove this comment to see the full error message
                promise_1.default(page_1.default.fromJSON(cachedPage))
            : generatePage_1.default(output, page).then((resultPage) => {
                logger.debug.ln(`Update new page "${file.getPath()}"`);
                // @ts-expect-error ts-migrate(2339) FIXME: Property 'toJSON' does not exist on type 'Class'.
                cache.setKey(pageHash, page_1.default.toJSON(resultPage));
                return resultPage;
            });
        return pagePromise
            .then((resultPage) => {
            // It call renderToString
            // Create page file
            return generator.onPage(output, resultPage);
        })
            .fail((err) => {
            logger.error.ln(`error while generating page "${file.getPath()}":`);
            throw err;
        });
    });
    return promise_1.default.all(pageList.toArray()).then(() => {
        // update caches
        cache.save();
        return output;
    });
}
exports.default = generatePages;
